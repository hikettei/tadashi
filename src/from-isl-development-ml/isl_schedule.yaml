domain: "{ Stmt_17[i0, i1, i2] : 0 <= i0 <= 1055 and 0 <= i1 <= 1055 and 0 <= i2 <= 1023; Stmt_12[i0, i1] : 0 <= i0 <= 1055 and 0 <= i1 <= 1055 }"
child:
  sequence:
  - filter: "{ Stmt_12[i0, i1] }"
    child:
      mark: "1st level tiling - Tiles"
      child:
        schedule: "[{ Stmt_12[i0, i1] -> [(floor((i0)/32))] }, { Stmt_12[i0, i1] -> [(floor((i1)/32))] }]"
        permutable: 1
        coincident: [ 1, 1 ]
        child:
          mark: "1st level tiling - Points"
          child:
            schedule: "[{ Stmt_12[i0, i1] -> [(i0 - 32*floor((i0)/32))] }, { Stmt_12[i0, i1] -> [(i1 - 32*floor((i1)/32))] }]"
            permutable: 1
            coincident: [ 1, 1 ]
  - filter: "{ Stmt_17[i0, i1, i2] }"
    child:
      mark: "1nd level tiling - Tiles"
      child:
        schedule: "[{ Stmt_17[i0, i1, i2] -> [(floor((i0)/16))] }, { Stmt_17[i0, i1, i2] -> [(floor((i2)/256))] }]"
        child:
          extension: "{ [i0, i1, i2] -> New_Domain_Element[i0, i1, i2] : 0 <= i0 <= 1055 and 0 <= i1 <= 1055 and 0 <= i2 <= 1023 }"
          child:
            sequence:
            - filter: "{ New_Domain_Element[i0, i1, i2] }"
            - filter: "{ Stmt_17[i0, i1, i2] }"
              child:
                schedule: "[{ Stmt_17[i0, i1, i2] -> [(floor((i1)/96))] }]"
                child:
                  mark: "1nd level tiling - Points"
                  child:
                    mark: "Register tiling - Tiles"
                    child:
                      schedule: "[{ Stmt_17[i0, i1, i2] -> [(floor((i0)/4) - 4*floor((i0)/16))] }, { Stmt_17[i0, i1, i2] -> [(floor((i1)/8) - 12*floor((i1)/96))] }, { Stmt_17[i0, i1, i2] -> [(i2 - 256*floor((i2)/256))] }]"
                      permutable: 1
                      coincident: [ 1, 1, 0 ]
                      child:
                        mark: "Register tiling - Points"
                        child:
                          schedule: "[{ Stmt_17[i0, i1, i2] -> [(i0 - 4*floor((i0)/4))] }, { Stmt_17[i0, i1, i2] -> [(i1 - 8*floor((i1)/8))] }, { Stmt_17[i0, i1, i2] -> [(0)] }]"
                          permutable: 1
                          coincident: [ 1, 1, 0 ]
