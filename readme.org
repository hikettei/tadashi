* Tadashi

** Documentation:

Documentation will be made available on
https://tadashi.readthedocs.io/ (after the double blind review).

*** Prerequisits
Compile Tadashi (as described below), and set the ~PYTHONPATH~
environment variable to point to the repository root.

*** Quick start

#+begin_src python :dir . :results output :session s1
  import tadashi
  from tadashi.apps import Simple

  scops = tadashi.Scops(Simple("examples/depnodep.c"))
#+end_src

#+RESULTS:

#+begin_src python :results output :session s1
  node = scops[0].schedule_tree[1]
  print(node)
  tr = tadashi.TrEnum.FULL_SHIFT_VAR
  assert tr in node.available_transformations
#+end_src

#+RESULTS:
: Node type: NodeType.BAND, [{'params': ['N'], 'vars': ['c0', 'c1']}], [N] -> L_0[{ S_0[c0, c1] -> [(c0)] }], [0]

#+begin_src python :results output :session s1
  print(f"{tr=}")
  print(f"{node.arg_valid(tr)=}")
  node.transform(tadashi.TrEnum.INTERCHANGE)
  scops.generate_code()
#+end_src

#+RESULTS:
: tr=<TrEnum.FULL_SHIFT_VAR: 'full_shift_var'>

** Build instructions:

Before building, install LLVM and other (system) packages (check
[[docker/tadashi.dockerfile][dockerfile]] for an exact list of ~apt-get~ packages).

#+begin_src bash
git clone --recursive https://github.com/vatai/tadashi.git
mkdir tadashi/build
cd tadashi/build
cmake ..
cmake --build .
#+end_src

** Run from docker

#+begin_src bash
mk_dot_env.sh  # create .env file with USER, UID, GROUP, GID
docker compose build # build images
docker compose run --rm -it tadashi
#+end_src

The tadashi binds the host repo to ~/workdir~ inside the container.

Tadashi should be rebuilt from the container (i.e. these are
instructions primarily for developers):
#+begin_src bash
mkdir /workdir/build
cd /workdir/build
cmake ..
cmake --build .
#+end_src
The dependencies are built during the ~docker compose build~ command
under ~/tadashi/build/_deps~ and the environment is set up that these
dependencies are used (i.e. not rebuilt again).
