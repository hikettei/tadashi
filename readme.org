* Tadashi

** Documentation:

Documentation will be made available on
https://tadashi.readthedocs.io/ (after the double blind review).

*** Prerequisits
Compile Tadashi (as described below), and set the ~PYTHONPATH~
environment variable to point to the repository root.

*** Quick star
:PROPERTIES:
:header-args: :session s1 :results output :exports both
:END:

After importing Tadashi we obtain the loop nests (SCoPs) from a [[./tadashi/apps.py][Simple]]
app.
#+begin_src python
  import tadashi
  from tadashi.apps import Simple
  app = Simple("examples/depnodep.c")
  scops = tadashi.Scops(app)
#+end_src

#+RESULTS:

Select a node and a transformation.
#+begin_src python :exports both
  node = scops[0].schedule_tree[1]
  print(f"{node=}")
  tr = tadashi.TrEnum.FULL_SHIFT_VAR
  print(f"{tr in node.available_transformations=}")
#+end_src

#+RESULTS:
: node=Node type: NodeType.BAND, [{'params': ['N'], 'vars': ['c0', 'c1']}], [N] -> L_0[{ S_0[c0, c1] -> [(c0)] }], [0]
: tr in node.available_transformations=True

#+begin_src python :exports both
  print(f"{tr=}")
  lu = node.available_args(tr)
  print(f"{len(lu)=}")
  print(f"{lu[0]=}")
  print(f"{lu[1]=}")
#+end_src

#+RESULTS:
: tr=<TrEnum.FULL_SHIFT_VAR: 'full_shift_var'>
: len(lu)=2
: lu[0]=LowerUpperBound(lower=None, upper=None)
: lu[1]=LowerUpperBound(lower=0, upper=2)


#+begin_src python :exports both
  args = [13, 1]
  print(f"{node.valid_args(tr, *args)=}")
  node.transform(tr, *args)
  scops.generate_code()
#+end_src

#+RESULTS:
: node.valid_args(tr, *args)=True

#+begin_src python :exports both
  app.compile()
  print(f"{app.measure()=}")
#+end_src

#+RESULTS:
: app.measure()=47.0

** Build instructions:

Before building, install LLVM and other (system) packages (check
[[file:./docker/tadashi.dockerfile][dockerfile]] for an exact list of ~apt-get~ packages).

#+begin_src bash
git clone --recursive https://github.com/vatai/tadashi.git
mkdir tadashi/build
cd tadashi/build
cmake ..
cmake --build .
#+end_src

#+RESULTS:

** Run from docker

#+begin_src bash
mk_dot_env.sh  # create .env file with USER, UID, GROUP, GID
docker compose build # build images
docker compose run --rm -it tadashi
#+end_src

#+RESULTS:

The tadashi binds the host repo to ~/workdir~ inside the container.

Tadashi should be rebuilt from the container (i.e. these are
instructions primarily for developers):
#+begin_src bash
mkdir /workdir/build
cd /workdir/build
cmake ..
cmake --build .
#+end_src

#+RESULTS:

The dependencies are built during the ~docker compose build~ command
under ~/tadashi/build/_deps~ and the environment is set up that these
dependencies are used (i.e. not rebuilt again).
